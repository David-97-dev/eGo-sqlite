import mysql.connector
from mysql.connector import errorcode
import pandas as pd
import datetime as dt
import requests
import sqlite3


class controller:
    @staticmethod
    def connect_database():
        print("Establishing connection to database (sqlite)...")

        try:
            connection = sqlite3.connect("national-charge-point-registry.db")
            connection.execute('''CREATE TABLE `registry` (
          `chargeDeviceID` varchar(100) NOT NULL,
          `reference` varchar(30) DEFAULT NULL,
          `name` varchar(100) DEFAULT NULL,
          `latitude` varchar(30) DEFAULT NULL,
          `longitude` varchar(30) DEFAULT NULL,
          `subBuildingName` varchar(100) DEFAULT NULL,
          `buildingName` varchar(100) DEFAULT NULL,
          `buildingNumber` varchar(60) DEFAULT NULL,
          `thoroughfare` varchar(100) DEFAULT NULL,
          `street` varchar(100) DEFAULT NULL,
          `doubleDependantLocality` varchar(100) DEFAULT NULL,
          `dependantLocality` varchar(100) DEFAULT NULL,
          `town` varchar(100) DEFAULT NULL,
          `county` varchar(100) DEFAULT NULL,
          `postcode` varchar(10) DEFAULT NULL,
          `countryCode` varchar(10) DEFAULT NULL,
          `uprn` varchar(100) DEFAULT NULL,
          `deviceDescription` varchar(250) DEFAULT NULL,
          `locationShortDescription` varchar(200) DEFAULT NULL,
          `locationLongDescription` varchar(520) DEFAULT NULL,
          `deviceManufacturer` varchar(100) DEFAULT NULL,
          `deviceModel` varchar(100) DEFAULT NULL,
          `deviceOwnerName` varchar(100) DEFAULT NULL,
          `deviceOwnerWebsite` varchar(100) DEFAULT NULL,
          `deviceOwnerTelephoneNo` varchar(50) DEFAULT NULL,
          `deviceOwnerContactName` varchar(100) DEFAULT NULL,
          `deviceControllerName` varchar(100) DEFAULT NULL,
          `deviceControllerWebsite` varchar(100) DEFAULT NULL,
          `deviceControllerTelephoneNo` varchar(100) DEFAULT NULL,
          `deviceControllerContactName` varchar(100) DEFAULT NULL,
          `deviceNetworks` varchar(100) DEFAULT NULL,
          `chargeDeviceStatus` varchar(100) DEFAULT NULL,
          `publishStatus` varchar(100) DEFAULT NULL,
          `deviceValidated` varchar(100) DEFAULT NULL,
          `dateCreated` varchar(20) DEFAULT NULL,
          `dateUpdated` varchar(100) DEFAULT NULL,
          `moderated` varchar(50) DEFAULT NULL,
          `lastUpdated` varchar(100) DEFAULT NULL,
          `lastUpdatedBy` varchar(100) DEFAULT NULL,
          `attribution` varchar(100) DEFAULT NULL,
          `dateDeleted` varchar(20) DEFAULT NULL,
          `paymentRequired` varchar(100) DEFAULT NULL,
          `paymentRequiredDetails` varchar(200) DEFAULT NULL,
          `subscriptionRequired` varchar(100) DEFAULT NULL,
          `subscriptionRequiredDetails` varchar(300) DEFAULT NULL,
          `parkingFeesFlag` varchar(3) DEFAULT NULL,
          `parkingFeesDetails` varchar(150) DEFAULT NULL,
          `parkingFeesUrl` varchar(100) DEFAULT NULL,
          `accessRestrictionFlag` varchar(100) DEFAULT NULL,
          `accessRestrictionDetails` varchar(600) DEFAULT NULL,
          `physicalRestrictionFlag` varchar(100) DEFAULT NULL,
          `physicalRestrictionText` varchar(100) DEFAULT NULL,
          `onStreetFlag` varchar(3) DEFAULT NULL,
          `locationType` varchar(30) DEFAULT NULL,
          `bearing` varchar(100) DEFAULT NULL,
          `access24Hours` varchar(3) DEFAULT NULL,
          `accessMondayFrom` varchar(100) DEFAULT NULL,
          `accessMondayTo` varchar(100) DEFAULT NULL,
          `accessTuesdayFrom` varchar(100) DEFAULT NULL,
          `accessTuesdayTo` varchar(100) DEFAULT NULL,
          `accessWednesdayFrom` varchar(100) DEFAULT NULL,
          `accessWednesdayTo` varchar(100) DEFAULT NULL,
          `accessThursdayFrom` varchar(100) DEFAULT NULL,
          `accessThursdayTo` varchar(100) DEFAULT NULL,
          `accessFridayFrom` varchar(100) DEFAULT NULL,
          `accessFridayTo` varchar(100) DEFAULT NULL,
          `accessSaturdayFrom` varchar(100) DEFAULT NULL,
          `accessSaturdayTo` varchar(100) DEFAULT NULL,
          `accessSundayFrom` varchar(100) DEFAULT NULL,
          `accessSundayTo` varchar(100) DEFAULT NULL,
          `connector1ID` varchar(100) DEFAULT NULL,
          `connector1Type` varchar(100) DEFAULT NULL,
          `connector1RatedOutputKW` varchar(100) DEFAULT NULL,
          `connector1OutputCurrent` varchar(100) DEFAULT NULL,
          `connector1RatedVoltage` varchar(100) DEFAULT NULL,
          `connector1ChargeMethod` varchar(100) DEFAULT NULL,
          `connector1ChargeMode` varchar(100) DEFAULT NULL,
          `connector1TetheredCable` varchar(100) DEFAULT NULL,
          `connector1Status` varchar(100) DEFAULT NULL,
          `connector1Description` varchar(100) DEFAULT NULL,
          `connector1Validated` varchar(100) DEFAULT NULL,
          `connector2ID` varchar(100) DEFAULT NULL,
          `connector2Type` varchar(100) DEFAULT NULL,
          `connector2RatedOutputKW` varchar(100) DEFAULT NULL,
          `connector2OutputCurrent` varchar(100) DEFAULT NULL,
          `connector2RatedVoltage` varchar(100) DEFAULT NULL,
          `connector2ChargeMethod` varchar(100) DEFAULT NULL,
          `connector2ChargeMode` varchar(100) DEFAULT NULL,
          `connector2TetheredCable` varchar(100) DEFAULT NULL,
          `connector2Status` varchar(100) DEFAULT NULL,
          `connector2Description` varchar(100) DEFAULT NULL,
          `connector2Validated` varchar(100) DEFAULT NULL,
          `connector3ID` varchar(100) DEFAULT NULL,
          `connector3Type` varchar(100) DEFAULT NULL,
          `connector3RatedOutputKW` varchar(100) DEFAULT NULL,
          `connector3OutputCurrent` varchar(100) DEFAULT NULL,
          `connector3RatedVoltage` varchar(100) DEFAULT NULL,
          `connector3ChargeMethod` varchar(100) DEFAULT NULL,
          `connector3ChargeMode` varchar(100) DEFAULT NULL,
          `connector3TetheredCable` varchar(100) DEFAULT NULL,
          `connector3Status` varchar(100) DEFAULT NULL,
          `connector3Description` varchar(100) DEFAULT NULL,
          `connector3Validated` varchar(100) DEFAULT NULL,
          `connector4ID` varchar(100) DEFAULT NULL,
          `connector4Type` varchar(100) DEFAULT NULL,
          `connector4RatedOutputKW` varchar(100) DEFAULT NULL,
          `connector4OutputCurrent` varchar(100) DEFAULT NULL,
          `connector4RatedVoltage` varchar(100) DEFAULT NULL,
          `connector4ChargeMethod` varchar(100) DEFAULT NULL,
          `connector4ChargeMode` varchar(100) DEFAULT NULL,
          `connector4TetheredCable` varchar(100) DEFAULT NULL,
          `connector4Status` varchar(100) DEFAULT NULL,
          `connector4Description` varchar(100) DEFAULT NULL,
          `connector4Validated` varchar(100) DEFAULT NULL,
          `connector5ID` varchar(100) DEFAULT NULL,
          `connector5Type` varchar(100) DEFAULT NULL,
          `connector5RatedOutputKW` varchar(100) DEFAULT NULL,
          `connector5OutputCurrent` varchar(100) DEFAULT NULL,
          `connector5RatedVoltage` varchar(100) DEFAULT NULL,
          `connector5ChargeMethod` varchar(100) DEFAULT NULL,
          `connector5ChargeMode` varchar(100) DEFAULT NULL,
          `connector5TetheredCable` varchar(100) DEFAULT NULL,
          `connector5Status` varchar(100) DEFAULT NULL,
          `connector5Description` varchar(100) DEFAULT NULL,
          `connector5Validated` varchar(100) DEFAULT NULL,
          `connector6ID` varchar(100) DEFAULT NULL,
          `connector6Type` varchar(100) DEFAULT NULL,
          `connector6RatedOutputKW` varchar(100) DEFAULT NULL,
          `connector6OutputCurrent` varchar(100) DEFAULT NULL,
          `connector6RatedVoltage` varchar(100) DEFAULT NULL,
          `connector6ChargeMethod` varchar(100) DEFAULT NULL,
          `connector6ChargeMode` varchar(100) DEFAULT NULL,
          `connector6TetheredCable` varchar(100) DEFAULT NULL,
          `connector6Status` varchar(100) DEFAULT NULL,
          `connector6Description` varchar(100) DEFAULT NULL,
          `connector6Validated` varchar(100) DEFAULT NULL,
          `connector7ID` varchar(100) DEFAULT NULL,
          `connector7Type` varchar(100) DEFAULT NULL,
          `connector7RatedOutputKW` varchar(100) DEFAULT NULL,
          `connector7OutputCurrent` varchar(100) DEFAULT NULL,
          `connector7RatedVoltage` varchar(100) DEFAULT NULL,
          `connector7ChargeMethod` varchar(100) DEFAULT NULL,
          `connector7ChargeMode` varchar(100) DEFAULT NULL,
          `connector7TetheredCable` varchar(100) DEFAULT NULL,
          `connector7Status` varchar(100) DEFAULT NULL,
          `connector7Description` varchar(100) DEFAULT NULL,
          `connector7Validated` varchar(100) DEFAULT NULL,
          `connector8ID` varchar(100) DEFAULT NULL,
          `connector8Type` varchar(100) DEFAULT NULL,
          `connector8RatedOutputKW` varchar(100) DEFAULT NULL,
          `connector8OutputCurrent` varchar(100) DEFAULT NULL,
          `connector8RatedVoltage` varchar(100) DEFAULT NULL,
          `connector8ChargeMethod` varchar(100) DEFAULT NULL,
          `connector8ChargeMode` varchar(100) DEFAULT NULL,
          `connector8TetheredCable` varchar(100) DEFAULT NULL,
          `connector8Status` varchar(100) DEFAULT NULL,
          `connector8Description` varchar(100) DEFAULT NULL,
          `connector8Validated` varchar(100) DEFAULT NULL,
          PRIMARY KEY (`chargeDeviceID`)
        );''')
            connection.commit()

        except:
            return sqlite3.connect("national-charge-point-registry.db")

    @staticmethod
    def download_csv():
        print('Downloading CSV to local, please wait')
        data = pd.read_csv('http://chargepoints.dft.gov.uk/api/retrieve/registry/format/csv', engine='python', sep=',')
        data.fillna(value='', inplace=True)
        data.to_csv('points.csv')

    @staticmethod
    def get_local_csv():
        csv = open('out.csv')
        csv.fillna(value='', inplace=True)

        df = pd.DataFrame(csv,
                          columns=['chargeDeviceID', 'reference', 'name', 'latitude', 'longitude', 'subBuildingName',
                                   'buildingName', 'buildingNumber', 'thoroughfare', 'street',
                                   'doubleDependantLocality', 'dependantLocality', 'town', 'county', 'postcode',
                                   'countryCode', 'uprn', 'deviceDescription', 'locationShortDescription',
                                   'locationLongDescription', 'deviceManufacturer', 'deviceModel', 'deviceOwnerName',
                                   'deviceOwnerWebsite', 'deviceOwnerTelephoneNo', 'deviceOwnerContactName',
                                   'deviceControllerName', 'deviceControllerWebsite', 'deviceControllerTelephoneNo',
                                   'deviceControllerContactName', 'deviceNetworks', 'chargeDeviceStatus',
                                   'publishStatus', 'deviceValidated', 'dateCreated', 'dateUpdated', 'moderated',
                                   'lastUpdated', 'lastUpdatedBy', 'attribution', 'dateDeleted', 'paymentRequired',
                                   'paymentRequiredDetails', 'subscriptionRequired', 'subscriptionRequiredDetails',
                                   'parkingFeesFlag', 'parkingFeesDetails', 'parkingFeesUrl', 'accessRestrictionFlag',
                                   'accessRestrictionDetails', 'physicalRestrictionFlag', 'physicalRestrictionText',
                                   'onStreetFlag', 'locationType', 'bearing', 'access24Hours', 'accessMondayFrom',
                                   'accessMondayTo', 'accessTuesdayFrom', 'accessTuesdayTo', 'accessWednesdayFrom',
                                   'accessWednesdayTo', 'accessThursdayFrom', 'accessThursdayTo', 'accessFridayFrom',
                                   'accessFridayTo', 'accessSaturdayFrom', 'accessSaturdayTo', 'accessSundayFrom',
                                   'accessSundayTo', 'connector1ID', 'connector1Type', 'connector1RatedOutputKW',
                                   'connector1OutputCurrent', 'connector1RatedVoltage', 'connector1ChargeMethod',
                                   'connector1ChargeMode', 'connector1TetheredCable', 'connector1Status',
                                   'connector1Description', 'connector1Validated', 'connector2ID', 'connector2Type',
                                   'connector2RatedOutputKW', 'connector2OutputCurrent', 'connector2RatedVoltage',
                                   'connector2ChargeMethod', 'connector2ChargeMode', 'connector2TetheredCable',
                                   'connector2Status', 'connector2Description', 'connector2Validated', 'connector3ID',
                                   'connector3Type', 'connector3RatedOutputKW', 'connector3OutputCurrent',
                                   'connector3RatedVoltage', 'connector3ChargeMethod', 'connector3ChargeMode',
                                   'connector3TetheredCable', 'connector3Status', 'connector3Description',
                                   'connector3Validated', 'connector4ID', 'connector4Type', 'connector4RatedOutputKW',
                                   'connector4OutputCurrent', 'connector4RatedVoltage', 'connector4ChargeMethod',
                                   'connector4ChargeMode', 'connector4TetheredCable', 'connector4Status',
                                   'connector4Description', 'connector4Validated', 'connector5ID', 'connector5Type',
                                   'connector5RatedOutputKW', 'connector5OutputCurrent', 'connector5RatedVoltage',
                                   'connector5ChargeMethod', 'connector5ChargeMode', 'connector5TetheredCable',
                                   'connector5Status', 'connector5Description', 'connector5Validated', 'connector6ID',
                                   'connector6Type', 'connector6RatedOutputKW', 'connector6OutputCurrent',
                                   'connector6RatedVoltage', 'connector6ChargeMethod', 'connector6ChargeMode',
                                   'connector6TetheredCable', 'connector6Status', 'connector6Description',
                                   'connector6Validated', 'connector7ID', 'connector7Type', 'connector7RatedOutputKW',
                                   'connector7OutputCurrent', 'connector7RatedVoltage', 'connector7ChargeMethod',
                                   'connector7ChargeMode', 'connector7TetheredCable', 'connector7Status',
                                   'connector7Description', 'connector7Validated', 'connector8ID', 'connector8Type',
                                   'connector8RatedOutputKW', 'connector8OutputCurrent', 'connector8RatedVoltage',
                                   'connector8ChargeMethod', 'connector8ChargeMode', 'connector8TetheredCable',
                                   'connector8Status', 'connector8Description', 'connector8Validated'])

        return df

    @staticmethod
    def get_csv():

        try:

            data = pd.read_csv('http://chargepoints.dft.gov.uk/api/retrieve/registry/format/csv', engine='python',
                               sep=',')
            data.fillna(value='', inplace=True)

            df = pd.DataFrame(data, columns=['chargeDeviceID', 'reference', 'name', 'latitude', 'longitude',
                                             'subBuildingName', 'buildingName', 'buildingNumber', 'thoroughfare',
                                             'street', 'doubleDependantLocality', 'dependantLocality', 'town', 'county',
                                             'postcode', 'countryCode', 'uprn', 'deviceDescription',
                                             'locationShortDescription', 'locationLongDescription',
                                             'deviceManufacturer', 'deviceModel', 'deviceOwnerName',
                                             'deviceOwnerWebsite', 'deviceOwnerTelephoneNo', 'deviceOwnerContactName',
                                             'deviceControllerName', 'deviceControllerWebsite',
                                             'deviceControllerTelephoneNo', 'deviceControllerContactName',
                                             'deviceNetworks', 'chargeDeviceStatus', 'publishStatus', 'deviceValidated',
                                             'dateCreated', 'dateUpdated', 'moderated', 'lastUpdated', 'lastUpdatedBy',
                                             'attribution', 'dateDeleted', 'paymentRequired', 'paymentRequiredDetails',
                                             'subscriptionRequired', 'subscriptionRequiredDetails', 'parkingFeesFlag',
                                             'parkingFeesDetails', 'parkingFeesUrl', 'accessRestrictionFlag',
                                             'accessRestrictionDetails', 'physicalRestrictionFlag',
                                             'physicalRestrictionText', 'onStreetFlag', 'locationType', 'bearing',
                                             'access24Hours', 'accessMondayFrom', 'accessMondayTo', 'accessTuesdayFrom',
                                             'accessTuesdayTo', 'accessWednesdayFrom', 'accessWednesdayTo',
                                             'accessThursdayFrom', 'accessThursdayTo', 'accessFridayFrom',
                                             'accessFridayTo', 'accessSaturdayFrom', 'accessSaturdayTo',
                                             'accessSundayFrom', 'accessSundayTo', 'connector1ID', 'connector1Type',
                                             'connector1RatedOutputKW', 'connector1OutputCurrent',
                                             'connector1RatedVoltage', 'connector1ChargeMethod', 'connector1ChargeMode',
                                             'connector1TetheredCable', 'connector1Status', 'connector1Description',
                                             'connector1Validated', 'connector2ID', 'connector2Type',
                                             'connector2RatedOutputKW', 'connector2OutputCurrent',
                                             'connector2RatedVoltage', 'connector2ChargeMethod', 'connector2ChargeMode',
                                             'connector2TetheredCable', 'connector2Status', 'connector2Description',
                                             'connector2Validated', 'connector3ID', 'connector3Type',
                                             'connector3RatedOutputKW', 'connector3OutputCurrent',
                                             'connector3RatedVoltage', 'connector3ChargeMethod', 'connector3ChargeMode',
                                             'connector3TetheredCable', 'connector3Status', 'connector3Description',
                                             'connector3Validated', 'connector4ID', 'connector4Type',
                                             'connector4RatedOutputKW', 'connector4OutputCurrent',
                                             'connector4RatedVoltage', 'connector4ChargeMethod', 'connector4ChargeMode',
                                             'connector4TetheredCable', 'connector4Status', 'connector4Description',
                                             'connector4Validated', 'connector5ID', 'connector5Type',
                                             'connector5RatedOutputKW', 'connector5OutputCurrent',
                                             'connector5RatedVoltage', 'connector5ChargeMethod', 'connector5ChargeMode',
                                             'connector5TetheredCable', 'connector5Status', 'connector5Description',
                                             'connector5Validated', 'connector6ID', 'connector6Type',
                                             'connector6RatedOutputKW', 'connector6OutputCurrent',
                                             'connector6RatedVoltage', 'connector6ChargeMethod', 'connector6ChargeMode',
                                             'connector6TetheredCable', 'connector6Status', 'connector6Description',
                                             'connector6Validated', 'connector7ID', 'connector7Type',
                                             'connector7RatedOutputKW', 'connector7OutputCurrent',
                                             'connector7RatedVoltage', 'connector7ChargeMethod', 'connector7ChargeMode',
                                             'connector7TetheredCable', 'connector7Status', 'connector7Description',
                                             'connector7Validated', 'connector8ID', 'connector8Type',
                                             'connector8RatedOutputKW', 'connector8OutputCurrent',
                                             'connector8RatedVoltage', 'connector8ChargeMethod', 'connector8ChargeMode',
                                             'connector8TetheredCable', 'connector8Status', 'connector8Description',
                                             'connector8Validated'])

        except:
            pass

        return df

    @staticmethod
    def parse_csv(connection, df):
        # cursor = connection.cursor()
        i = 0
        for row in df.itertuples():
            try:
                connection.execute(
                    '''INSERT INTO registry (chargeDeviceID,reference,name,latitude,longitude,subBuildingName,buildingName,buildingNumber,thoroughfare,street,doubleDependantLocality,dependantLocality,town,county,postcode,countryCode,uprn,deviceDescription,locationShortDescription,locationLongDescription,deviceManufacturer,deviceModel,deviceOwnerName,deviceOwnerWebsite,deviceOwnerTelephoneNo,deviceOwnerContactName,deviceControllerName,deviceControllerWebsite,deviceControllerTelephoneNo,deviceControllerContactName,deviceNetworks,chargeDeviceStatus,publishStatus,deviceValidated,dateCreated,dateUpdated,moderated,lastUpdated,lastUpdatedBy,attribution,dateDeleted,paymentRequired,paymentRequiredDetails,subscriptionRequired,subscriptionRequiredDetails,parkingFeesFlag,parkingFeesDetails,parkingFeesUrl,accessRestrictionFlag,accessRestrictionDetails,physicalRestrictionFlag,physicalRestrictionText,onStreetFlag,locationType,bearing,access24Hours,accessMondayFrom,accessMondayTo,accessTuesdayFrom,accessTuesdayTo,accessWednesdayFrom,accessWednesdayTo,accessThursdayFrom,accessThursdayTo,accessFridayFrom,accessFridayTo,accessSaturdayFrom,accessSaturdayTo,accessSundayFrom,accessSundayTo,connector1ID,connector1Type,connector1RatedOutputKW,connector1OutputCurrent,connector1RatedVoltage,connector1ChargeMethod,connector1ChargeMode,connector1TetheredCable,connector1Status,connector1Description,connector1Validated,connector2ID,connector2Type,connector2RatedOutputKW,connector2OutputCurrent,connector2RatedVoltage,connector2ChargeMethod,connector2ChargeMode,connector2TetheredCable,connector2Status,connector2Description,connector2Validated,connector3ID,connector3Type,connector3RatedOutputKW,connector3OutputCurrent,connector3RatedVoltage,connector3ChargeMethod,connector3ChargeMode,connector3TetheredCable,connector3Status,connector3Description,connector3Validated,connector4ID,connector4Type,connector4RatedOutputKW,connector4OutputCurrent,connector4RatedVoltage,connector4ChargeMethod,connector4ChargeMode,connector4TetheredCable,connector4Status,connector4Description,connector4Validated,connector5ID,connector5Type,connector5RatedOutputKW,connector5OutputCurrent,connector5RatedVoltage,connector5ChargeMethod,connector5ChargeMode,connector5TetheredCable,connector5Status,connector5Description,connector5Validated,connector6ID,connector6Type,connector6RatedOutputKW,connector6OutputCurrent,connector6RatedVoltage,connector6ChargeMethod,connector6ChargeMode,connector6TetheredCable,connector6Status,connector6Description,connector6Validated,connector7ID,connector7Type,connector7RatedOutputKW,connector7OutputCurrent,connector7RatedVoltage,connector7ChargeMethod,connector7ChargeMode,connector7TetheredCable,connector7Status,connector7Description,connector7Validated,connector8ID,connector8Type,connector8RatedOutputKW,connector8OutputCurrent,connector8RatedVoltage,connector8ChargeMethod,connector8ChargeMode,connector8TetheredCable,connector8Status,connector8Description,connector8Validated) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ,?, ?, ?, ?)''',
                    (row.chargeDeviceID, row.reference, row.name, row.latitude, row.longitude, row.subBuildingName,
                     row.buildingName, row.buildingNumber, row.thoroughfare, row.street, row.doubleDependantLocality,
                     row.dependantLocality, row.town, row.county, row.postcode, row.countryCode, row.uprn,
                     row.deviceDescription, row.locationShortDescription, row.locationLongDescription,
                     row.deviceManufacturer, row.deviceModel, row.deviceOwnerName, row.deviceOwnerWebsite,
                     row.deviceOwnerTelephoneNo, row.deviceOwnerContactName, row.deviceControllerName,
                     row.deviceControllerWebsite, row.deviceControllerTelephoneNo, row.deviceControllerContactName,
                     row.deviceNetworks, row.chargeDeviceStatus, row.publishStatus, row.deviceValidated,
                     row.dateCreated, row.dateUpdated, row.moderated, row.lastUpdated, row.lastUpdatedBy,
                     row.attribution, row.dateDeleted, row.paymentRequired, row.paymentRequiredDetails,
                     row.subscriptionRequired, row.subscriptionRequiredDetails, row.parkingFeesFlag,
                     row.parkingFeesDetails, row.parkingFeesUrl, row.accessRestrictionFlag,
                     row.accessRestrictionDetails, row.physicalRestrictionFlag, row.physicalRestrictionText,
                     row.onStreetFlag, row.locationType, row.bearing, row.access24Hours, row.accessMondayFrom,
                     row.accessMondayTo, row.accessTuesdayFrom, row.accessTuesdayTo, row.accessWednesdayFrom,
                     row.accessWednesdayTo, row.accessThursdayFrom, row.accessThursdayTo, row.accessFridayFrom,
                     row.accessFridayTo, row.accessSaturdayFrom, row.accessSaturdayTo, row.accessSundayFrom,
                     row.accessSundayTo, row.connector1ID, row.connector1Type, row.connector1RatedOutputKW,
                     row.connector1OutputCurrent, row.connector1RatedVoltage, row.connector1ChargeMethod,
                     row.connector1ChargeMode, row.connector1TetheredCable, row.connector1Status,
                     row.connector1Description, row.connector1Validated, row.connector2ID, row.connector2Type,
                     row.connector2RatedOutputKW, row.connector2OutputCurrent, row.connector2RatedVoltage,
                     row.connector2ChargeMethod, row.connector2ChargeMode, row.connector2TetheredCable,
                     row.connector2Status, row.connector2Description, row.connector2Validated, row.connector3ID,
                     row.connector3Type, row.connector3RatedOutputKW, row.connector3OutputCurrent,
                     row.connector3RatedVoltage, row.connector3ChargeMethod, row.connector3ChargeMode,
                     row.connector3TetheredCable, row.connector3Status, row.connector3Description,
                     row.connector3Validated, row.connector4ID, row.connector4Type, row.connector4RatedOutputKW,
                     row.connector4OutputCurrent, row.connector4RatedVoltage, row.connector4ChargeMethod,
                     row.connector4ChargeMode, row.connector4TetheredCable, row.connector4Status,
                     row.connector4Description, row.connector4Validated, row.connector5ID, row.connector5Type,
                     row.connector5RatedOutputKW, row.connector5OutputCurrent, row.connector5RatedVoltage,
                     row.connector5ChargeMethod, row.connector5ChargeMode, row.connector5TetheredCable,
                     row.connector5Status, row.connector5Description, row.connector5Validated, row.connector6ID,
                     row.connector6Type, row.connector6RatedOutputKW, row.connector6OutputCurrent,
                     row.connector6RatedVoltage, row.connector6ChargeMethod, row.connector6ChargeMode,
                     row.connector6TetheredCable, row.connector6Status, row.connector6Description,
                     row.connector6Validated, row.connector7ID, row.connector7Type, row.connector7RatedOutputKW,
                     row.connector7OutputCurrent, row.connector7RatedVoltage, row.connector7ChargeMethod,
                     row.connector7ChargeMode, row.connector7TetheredCable, row.connector7Status,
                     row.connector7Description, row.connector7Validated, row.connector8ID, row.connector8Type,
                     row.connector8RatedOutputKW, row.connector8OutputCurrent, row.connector8RatedVoltage,
                     row.connector8ChargeMethod, row.connector8ChargeMode, row.connector8TetheredCable,
                     row.connector8Status, row.connector8Description, row.connector8Validated))
            except:
                pass
            i = i + 1

        controller.count_i(i)
        return i

    @staticmethod
    def count_i(i):
        print(str(i) + ' Rows Added')
